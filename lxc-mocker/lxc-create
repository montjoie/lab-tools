#!/bin/bash
# -*- coding: utf-8 -*-
#
# Copyright (C) 2018 Linaro Limited
#
# Author: Senthil Kumaran S <senthil.kumaran@linaro.org>
#
# This file is part of LAVA LXC mocker.
#
# Released under the MIT License:
# http://www.opensource.org/licenses/mit-license.php
#
# Mocks lxc-create command which is used by LAVA.

# Get the list of requested packages.
PACKAGES=$(sed 's/,/ /g' <<< $(cut -d' ' -f1 <<< $(awk -F'--packages ' '{print $2}' <<< "$@")))

while getopts "qt:n:" opt; do
    case $opt in
        q)
            QUIET=1
            ;;
        t)
            TEMPLATE="$OPTARG"
		echo "DEBUG: getopt TEMPLATE=$TEMPLATE"
            ;;
        n)
            LXC_NAME="$OPTARG"
		echo "DEBUG: getopt LXC_NAME=$LXC_NAME"
            ;;
        *)
            ;;
    esac
done

MIRROR=""
RELEASE="buster"
while [ $# -ge 1 ]
do
	case $1 in
	-q)
		shift
	;;
	-n)
		shift
		LXC_NAME="$1"
		shift
	;;
	--release)
		shift
		echo "DEBUG: set release to $1"
		RELEASE="$1"
		shift
	;;
	-t)
		shift
		case $1 in
		debian)
		;;
		ubuntu)
			MIRROR="http://mirror.ubuntu.ikoula.com/ubuntu/"
		;;
		debian-cts)
		;;
		*)
			echo "ERROR: unknown template $1"
			shift
		;;
		esac
	;;
	*)
		echo "DEBUG: skip $1"
		shift
	;;
	esac
done

if [ -z "$LXC_NAME" ];then
	echo "ERROR: need a LXC_NAME"
	exit 1
fi

# TODO depends on that for avoiding the re-install
echo "DEBUG: release $RELEASE"
apt-get -y install debootstrap rsync lsof || exit $?

mkdir -p /var/lib/lxc/${LXC_NAME}/rootfs || exit $?

if [ -e /var/lib/lxc/cache/ ];then
	echo "DEBUG: copy cached contents"
	mkdir -p /var/lib/lxc/${LXC_NAME}/rootfs/var/cache/apt/archives/
	rsync -a /var/lib/lxc/cache/ /var/lib/lxc/${LXC_NAME}/rootfs/var/cache/apt/archives/
fi

create_rootfs() {
	echo "DEBUG: create_rootfs"
	echo "DEBUG: mount /proc"
	mount -t proc none /var/lib/lxc/${LXC_NAME}/rootfs/proc || exit $?
	echo "DEBUG: debootstrap"
	debootstrap --variant=minbase $RELEASE /var/lib/lxc/${LXC_NAME}/rootfs $MIRROR || exit $?
	if [ "$PACKAGES" ] && [ "$QUIET" ]; then
		echo "DEBUG: install $PACKAGES"
	    DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get -q update > /dev/null 2>&1
	    DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get -q upgrade -y > /dev/null 2>&1
	    # install the requested packages.
	    DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get -q install -y $PACKAGES > /dev/null 2>&1
	elif [ "$PACKAGES" ]; then
		echo "DEBUG: install $PACKAGES"
	    DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get update
	    DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get upgrade -y
	    # install the requested packages.
	    DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get install -y $PACKAGES
	fi

	case $RELEASE in
		xenial)
			echo "deb $MIRROR xenial main universe" > /var/lib/lxc/${LXC_NAME}/rootfs/etc/apt/sources.list
		;;
	esac
	echo "DEBUG: create_rootfs end"
	umount /var/lib/lxc/${LXC_NAME}/rootfs/proc
	mount

	return 0
}

LXC_ROOTFS=/var/lib/lxc/${LXC_NAME}/rootfs

case $TEMPLATE in
debian-cts)
	if [ -e /var/lib/lxc/template/$TEMPLATE ];then
		echo "DEBUG: copy cached rootfs"
		cp -a /var/lib/lxc/template/$TEMPLATE/* /var/lib/lxc/${LXC_NAME}/rootfs/ || exit $?
	else
		mkdir -p /var/lib/lxc/template
		echo "DEBUG: create template"
		create_rootfs
		# java want it
		mount -t proc none /var/lib/lxc/${LXC_NAME}/rootfs/proc
		DEBIAN_FRONTEND=noninteractive chroot /var/lib/lxc/${LXC_NAME}/rootfs apt-get install -y android-tools-adb \
			android-tools-fastboot \
			sudo \
			ca-certificates-java \
			coreutils \
			usbutils \
			curl \
			wget \
			zip \
			xz-utils \
			python-lxml \
			python-setuptools \
			python-pexpect \
			aapt \
			lib32z1-dev \
			libc6-dev-i386 \
			lib32gcc1 \
			libc6-i386 \
			libstdc++6 \
			libgcc1 \
			zlib1g \
			libncurses5 \
			python-dev \
			python-protobuf \
			protobuf-compiler \
			python-virtualenv \
			python-pip \
			python-pexpect \
			psmisc \
			openjdk-8-jdk-headless
		if [ $? -ne 0 ];then
			umount -f $LXC_ROOTFS/dev
			umount -f $LXC_ROOTFS/proc
			umount -f $LXC_ROOTFS/sys
			exit 1
		fi
		umount -f $LXC_ROOTFS/dev
		umount -f $LXC_ROOTFS/proc
		umount -f $LXC_ROOTFS/sys
		cp -a $LXC_ROOTFS /var/lib/lxc/template/$TEMPLATE
		if [ $? -ne 0 ];then
			umount -f $LXC_ROOTFS/dev
			umount -f $LXC_ROOTFS/proc
			umount -f $LXC_ROOTFS/sys
			exit 1
		fi
		ls -l /var/lib/lxc/template/
	fi
;;
*)
	create_rootfs
;;
esac

echo "DEBUG: copy APT files to cache"
mkdir -p /var/lib/lxc/cache
rsync -a /var/lib/lxc/${LXC_NAME}/rootfs/var/cache/apt/archives/ /var/lib/lxc/cache/

# BIG FAT TODO: handle errors
# now mount /dev and /sys
echo "DEBUG: mount /dev"
mount -t devtmpfs none /var/lib/lxc/${LXC_NAME}/rootfs/dev || exit $?
echo "DEBUG: mount /sys"
mount -t sysfs none /var/lib/lxc/${LXC_NAME}/rootfs/sys || exit $?
# java want it
echo "DEBUG: mount /proc"
mount -t proc none /var/lib/lxc/${LXC_NAME}/rootfs/proc || exit $?

mount
echo "lxc-create-mocker end"

exit 0
